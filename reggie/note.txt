Servlet--GenericServlet--HttpServlet--DispatcherServlet

ServletRequest--HttpServletRequest--RequestFacade

ServletResponse--HttpServletResponse--ResponseFacade

Facade--正面，立面；假象，伪装

//JavaWeb三大组件--Servlet,Filter,Listener
1.1 Servlet继承体系及其方法
1.1.1 Servlet
    init,service,destroy,ServletConfig,getServletInfo
1.1.2 HttpServlet
    doGet,doPost,...


1.2 res,req继承体系及其方法，请求转发与重定向
1.2.1 req
    1.2.1.1 解析请求报文
        获取请求行数据:getMethod()/getContextPath()/getRequestURL()/getRequestURI()/getQueryString()
        获取请求头数据:getHeader()
        获取请求体数据:getReader()/getInputStream()

    1.2.1.2 不区分请求方式获取请求数据(统一getQueryString()/getReader())
        getParameterMap()/getParameterValues()/getParameter()

    1.2.1.3 解决请求参数中文乱码问题

    1.2.1.4 请求转发
        数据共享:req.getAttribute()/setAttribute()/removeAttribute()
        请求转发:getRequestDispatcher("URI").forward(req,res)

1.2.2 res
    1.2.2.1 设置响应报文
        设置响应行(的状态码):setStatus()
        设置响应头:setHeader()
        设置响应体:getWriter()/getOutputStream()

    1.2.1.2 解决响应数据中文乱码问题
        setContentType()

    1.2.2.3 重定向
        res.setStatus(302);res.setHeader("Location","URL")或res.sendRedirect("URL")


2.Filter

3.Listener


//会话技术
1 Cookie
    1.1 发送
        Cookie cookie = new Cookie("key","value");
        res.addCookie(new Cookie("key","value"));

    1.2 获取
        req.getCookies()[0].getName()/getValue()

    1.3 原理:设置请求/响应头(cookie/set-cookie) (直接通过cookie传输数据,客户端每次将得到的cookie存储在浏览器中)

2 Session
    2.1 获取
        HttpSession session = req.getSession()

    2.2 设值方法
        session.setAttribute()/getAttribute()/removeAttribute()

    2.3 原理:基于Cookie的,设置响应头set-cookie：JSESSIONID:VALUE (但不在cookie中传输数据,只传输JSESSIONID,数据在服务器端的session对象中)

    2.4 钝化与活化，销毁(invalidate())


//MVC，三层架构，SSM之间的关系

insert into tableName(col1,col2,...) values (col1,col2...)
insert into tableName values (all...)

update tableName set [expr] where [expr]

delete from tableName where [expr]